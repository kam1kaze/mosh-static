---
name: "Linux build"

on:
  push:
    branches:
      - master
jobs:
  build_linux:
    name: Build Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: docker build -t builder .
      - name: Build binary
        run: |
          docker run \
            -v $PWD:/mosh \
            -w /mosh \
            --name=builder \
            builder \
            sh -c './autogen.sh && LDFLAGS=-static ./configure && make'
      - uses: actions/upload-artifact@v2
        with:
          name: mosh-linux
          path: |
            src/frontend/mosh-server
            src/frontend/mosh-client
          if-no-files-found: error
  release:
    name: Release
    runs-on: ubuntu-20.04
    needs: [build_linux]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: mosh-linux
      - run: |
          (
            echo '- [Build #${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
            echo
            echo '## Files'
            echo '```'
            ( file mosh-server mosh-client )
            echo '```'
            echo
            echo '## SHA256 Checksums'
            echo '```'
            ( sha256sum mosh-server mosh-client )
            echo '```'
          ) | tee release.md
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Build #${{ github.run_number }}"
          body_path: release.md
          prerelease: false
          draft: false
          tag_name: run-${{ github.run_number }}
          files: |
            mosh-server-linux
            mosh-client-linux
